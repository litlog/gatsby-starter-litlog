{"version":3,"sources":["webpack:///./src/pages/litlog/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["_ref","data","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_1__","allMarkdownRemark","edges","map","_ref2","index","node","key","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","frontmatter","title","query","StaticQueryContext","createContext","StaticQuery","props","Consumer","staticQueryData","render","children","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","m","module","exports","__webpack_require__","default","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","__webpack_exports__","o","224","e","t","226","n","r","l","i","u","c","d","header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","layout_Layout","b","Fragment","Helmet_default","site","siteMetadata","meta","name","content","paddingTop","_755544856","prop_types_default"],"mappings":"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","file":"component---src-pages-litlog-index-js-1ba45d14ffb6e64e338d.js","sourcesContent":["import React from 'react'\nimport Layout from '../../components/layout'\nimport { graphql } from 'gatsby'\nimport { Link } from 'gatsby'\n\nexport default ({ data }) => {\n  return (\n    <Layout>\n      <table>\n        <thead>\n          <tr>\n            <th>fileAbsolutePath</th>\n            <th>title</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.allMarkdownRemark.edges.map(({ node }, index) =>\n            <tr key={index}>\n              <td>\n                <Link to={node.fields.slug}>{node.fields.slug}</Link>\n              </td>\n              <td>\n                {node.frontmatter.title}\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  {\n    allMarkdownRemark(sort: { fields: [fileAbsolutePath], order: ASC }) {\n      totalCount\n      edges {\n        node {\n          id\n          fileAbsolutePath\n          frontmatter {\n            title\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, { withPrefix, push, replace, navigateTo } from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  push,\n  replace,\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: 'rebeccapurple',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children, data }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        />\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}